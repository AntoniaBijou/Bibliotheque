verifier c'est quoi le probleme puis resoudre pourquoi l'insertion de pret a toujours echoué 
voici l'exeption dans le tomcat :
HTTP Status 500 – Internal Server Error
Type Exception Report

Message Request processing failed; nested exception is java.util.NoSuchElementException: No value present

Description The server encountered an unexpected condition that prevented it from fulfilling the request.

Exception

org.springframework.web.util.NestedServletException: Request processing failed; nested exception is java.util.NoSuchElementException: No value present
	org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
Root Cause

java.util.NoSuchElementException: No value present
	java.base/java.util.Optional.orElseThrow(Optional.java:377)
	com.example.controller.AdminController.enregistrerPret(AdminController.java:87)
	java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	java.base/java.lang.reflect.Method.invoke(Method.java:565)
	org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
Note The full stack trace of the root cause is available in the server logs.

Apache Tomcat/9.0.105

puis il dits que le probleme est dans AdminController donc voici cette class : 
package com.example.controller;

import com.example.model.Admin;
import com.example.model.Pret;
import com.example.repository.AdherantRepository;
import com.example.repository.ExemplaireRepository;
import com.example.repository.LivreRepository;
import com.example.repository.PretRepository;
import com.example.service.AdminService;
import com.example.service.PretService;

import java.time.LocalDate;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.format.annotation.DateTimeFormat;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.servlet.ModelAndView;

@Controller
public class AdminController {

    @Autowired
    private AdminService adminService;

    @GetMapping("/admin")
    public String voirAdmin() {
        return "/admin";
    }

    @PostMapping("/admin")
    public ModelAndView verifierAdmin(
            @RequestParam("nom") String nom,
            @RequestParam("email") String email,
            @RequestParam("password") String password) {

        ModelAndView mav = new ModelAndView();
        Admin admin = adminService.verifierConnexion(nom, email, password);

        if (admin != null) {
            mav.setViewName("redirect:/dashboard");
        } else {
            mav.setViewName("/admin");
            mav.addObject("erreur", "Identifiants incorrects.");
        }

        return mav;
    }

    @GetMapping("/dashboard")
    public String voirDashboard() {
        return "adminDashboard"; // ta vue JSP adminDashboard.jsp
    }

    @GetMapping("/admin/formPret")
    public ModelAndView afficherFormulairePret() {
        return new ModelAndView("formPret");
    }

    @Autowired
    private PretService pretService;

    
    @Autowired
    private AdherantRepository adherantRepository;

     
    @Autowired
    private ExemplaireRepository exemplaireRepository;

@PostMapping("/admin/savePret")
public ModelAndView enregistrerPret(
            @RequestParam("nomAdherant") String nomAdherant,
        @RequestParam("titreLivre") String titreLivre,
        @RequestParam("typePret") String typePret,
        @RequestParam("dateEmprunt") @DateTimeFormat(iso = DateTimeFormat.ISO.DATE) LocalDate dateEmprunt,
        @RequestParam("dateRetour") @DateTimeFormat(iso = DateTimeFormat.ISO.DATE) LocalDate dateRetour,
        @RequestParam("status") String status) {

    // Conversion des noms en IDs
    Integer idAdherant = adherantRepository.findByNom(nomAdherant).getIdAdherant();
    Integer idExemplaire = exemplaireRepository.findByLivreTitre(titreLivre)
                             .orElseThrow().getIdExemplaire();

    boolean success = pretService.ajouterPret(
        idAdherant,       // Integer
        idExemplaire,     // Integer
        typePret, 
        dateEmprunt, 
        dateRetour, 
        status
    );
    if (!success) {
        System.out.println("ÉCHEC - Raisons possibles:");
        System.out.println("1. Adhérant non trouvé");
        System.out.println("2. Exemplaire non trouvé");
        System.out.println("3. Erreur de validation");
    }
    
    return new ModelAndView(success ? "redirect:/admin/dashboard" : "formPret")
            .addObject("erreur", success ? null : "Échec de l'ajout du prêt");
}
    
    @Autowired
    private PretRepository pretRepository;

    @GetMapping("/admin/listePrets")
    public ModelAndView afficherListePrets() {
        List<Pret> liste = pretRepository.findAll();
        ModelAndView mav = new ModelAndView("listePrets");
        mav.addObject("prets", liste);
        return mav;
    }

}
